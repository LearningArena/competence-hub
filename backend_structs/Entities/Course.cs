using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using HotChocolate;



namespace Arena
{

	public enum Studyform
	{
		fulltime,
		parttime
	};


	[GraphQLDescription("A course is a unit of teaching that typically lasts one academic term, is led by one or more instructors (teachers or professors), and has a fixed roster of students. A course is usually an individual subject. Courses generally have a fixed program of sessions every week during the term, called lessons or classes. Students may receive a grade and academic credit after completion of the course")]
	public class Course
	{
		[Key]
		[DatabaseGenerated(DatabaseGeneratedOption.Identity)]
		public int id { get; set; }
		public string external_stringid { get; set; }
		public Record_Status record_status { get; set; }
		public string import_source { get; set; }

		[GraphQLDescription("Autogenerated fields")]
		public DateTime time_created { get; set; }
		public DateTime time_modified { get; set; }
		public int views { get; set; } = 0;

		public float? credits { get; set; }

		[GraphQLDescription("When this course is starting")]
		public DateTime? start_date { get; set; }

		[GraphQLDescription("When this course is ending")]
		public DateTime? end_date { get; set; }
		public DateTime? registration_start_date { get; set; }
		public DateTime? registration_end_date { get; set; }

		[GraphQLDescription("How this course it studied")]
		public Studyform? studyform { get; set; }
		public int? level { get; set; }
		public int? online { get; set; }

		[GraphQLDescription("National standard to measure the level of the education")]
		public int? seqf { get; set; }
		public int? hours { get; set; }
		public float? hogskolapoang { get; set; }
		public float? yrkeshogskolepoang { get; set; }

		[GraphQLDescription("Default courses(0). Efterlysningar of wanted_courses(1) or couch(2).")]
		public int? type { get; set; }
		public int? price { get; set; }



		[GraphQLDescription("The tools required to study this course")]
		public string required_tools { get; set; }
		public string prerequisite { get; set; }
		public string literature { get; set; }
		public string verbs { get; set; }
		public string studypace { get; set; }
		public string diplomas { get; set; }
		public string target_group { get; set; }
		public string description { get; set; }
		public string title { get; set; }
		public string subtitle { get; set; }
		public string category { get; set; }
		public string teachers { get; set; }
		public string bioteachers { get; set; }
		public string education_provider { get; set; }
		public string city { get; set; }
		public string language { get; set; }
		public string link { get; set; }
		public string name_of_contact_person { get; set; }
		public string email_of_contact_person { get; set; }
		public string image_company_logo { get; set; }
		public string image_course_banner { get; set; }
		public string image_teacher { get; set; }
		public string image_feature { get; set; }
		public string image_provider { get; set; }
		public bool is_favorite { get; set; } = false;


		[ForeignKey("organization")]
		public int? organization_id { get; set; }
		public virtual Organization organization { get; set; }


		[HotChocolate.Data.UseFiltering]
		public virtual ICollection<Organization_Course_Edge> organization_course_edges { get; set; }
		public virtual ICollection<Course_User_Edge> course_user_edges { get; set; }

		//Keywords : {Categories, Topics, Labels, Tags, etc...}
		public virtual ICollection<Course_Keyword_Edge> course_keyword_edges { get; set; }
	}
}